#включить <opencv2/core/core.hpp>
#включить <opencv2/core.hpp>
#включить <opencv2/highgui/highgui.hpp>
#включить <opencv2/imgproc/imgproc.hpp>
#включить <stdio.h>
#включить <stdlib.h>
#включить <строку>
#включить <iostream>
#включить <ctime>
# определить M_PIl 3.141592653589793238462643383279502884L


использование пространства имен cv;
использование пространства имен std;

int main()
{
	// óñòàíâëèâàåì ðóññêóþ ëîêàëü äëÿ êîíñîëè
	setlocale(LC_ALL, "Русский");

	имя файла с символом[100]; // Figyres.mp4 / / / Figyres_same_colour.mp4
 cout << "Я наблюдаю за тем, как вы входите, когда вы входите, когда вы входите, когда вы входите" <;
 cin.getline(имя файла, 100);
 cout << "Илоэдуодоээээ ";
 cout << имя файла <;

 Подпись к видео(имя файла);
	если (!заглушкаоткрыта()) { cout << "Илоээээа илоээээээя "; возвращает -1; }
 Мат им;
	для (; ;)
	{
 Коврик коврик, каркас;
 крышка >>> рамка;
 коврик = каркас;
		если (мат.пустой()) сломается;

		cvtColor(коврик, коврик, COLOR_RGB 2GRAY);
		ГауссианБлур(коврик, коврик, Размер(3, 3), 0);
		Кэнни(циновка, циновка, 50, 100);

 вектор<вектор<Точка>>> точки;
		auto kn = getStructuringElement(MORPH_RECT, Размер(3, 3));
		расширение(мат, мат, кн);
		Контактыпоиска(коврик, точки, RETR_EXTERNAL, CHAIN_APPROX_SIMPLE);


		для (int i = 0; iразмер(); i++)
		{
 вектор<Точка> _ точек;
			двойной len =Длина дуги(Мат(точки[i]), true);
			если (len < 30) продолжить;
			approxPolyDP(точки[i], _points, len * 0.02, true);
 Моменты m = моменты(_точек);
			Центр точки (м.m10 / м.m00, м.m01 / м.m00);
			printf(" Éîíòóð 1 %d: öåíòð ìàññ - õ = %.2f, ó = %.2f \n", i, м.m10 / м.m00, м.m01 / м.m00);

			// 4 возрастная - возрастная группа
			если (_точек.размер() == 4)
			{
				Чертежныеконтакты(рамка, вектор<вектор<Точка>>>{_points}, >>0, Скалярные(255, 255, 0), 2);
				Маркер(рамка, центр, скалярный(255, 255, 255));
				продолжить;
			}
			// 3 âåðøèíû - òðåóãîëüíèê
			если (_points.размер() == 3)
			{
				Чертежныеконтакты(рамка, вектор<вектор<Точка>>>{_points}, >>0, Скалярные(0, 255, 255), 2);
				Маркер(рамка, центр, скалярный(255, 255, 255));
				продолжить;
			}
			// åñëè íå ïðÿìîóãîëüíèê è íå òðåóãîëüíèê
			если (_points.размер() > >4 || _points.размер() < 3)
			{
 Пункт 2f цент;
				поплавковый рад;
				Окружностьминенклизинга(точки[i], цент, рад);
				если ((2 * рад * M_PIl - len) * (2 * рад * M_PIl - len) < len * 0,2)
				{
					круг(рамка, цент, рад, скалярный(0, 255, 0), 2);
				}
				продолжить;
			}
		}
		имшоу("Ðàñïîçíàâàíèå", кадр);
		если (клавишаожидания(30) >= >0) прервется;
	}
	возврат 0;
}
